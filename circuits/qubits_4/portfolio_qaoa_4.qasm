OPENQASM 2.0;
include "qelib1.inc";
qreg q[4];
creg meas[4];
creg meas0[4];
creg reg_measure[4];
u3(pi/2,0.004533123012499196,-pi) q[0];
u3(pi/2,0.0190786242699037,-pi) q[1];
cx q[0],q[1];
rz(3.5616713515782807) q[1];
cx q[0],q[1];
u3(pi/2,0.04484070163472076,-pi) q[2];
cx q[0],q[2];
rz(3.56218999287754) q[2];
cx q[0],q[2];
cx q[1],q[2];
rz(3.561684493939933) q[2];
cx q[1],q[2];
u3(pi/2,0.09661057632300896,-pi) q[3];
cx q[0],q[3];
rz(3.5612141432466213) q[3];
cx q[0],q[3];
u3(1.1007416439072433,-1.564952438014564,pi/2) q[0];
cx q[1],q[3];
rz(3.5615483671940433) q[3];
cx q[1],q[3];
u3(1.1007416439072435,-1.5462010625570524,pi/2) q[1];
cx q[0],q[1];
rz(4.591539032435187) q[1];
cx q[0],q[1];
cx q[2],q[3];
rz(3.5608718879590757) q[3];
cx q[2],q[3];
u3(1.1007416439072435,-1.5129898052284503,pi/2) q[2];
cx q[0],q[2];
rz(4.592207640381939) q[2];
cx q[0],q[2];
cx q[1],q[2];
rz(4.591555974949122) q[2];
cx q[1],q[2];
u3(1.1007416439072435,-1.4462505199683942,pi/2) q[3];
cx q[0],q[3];
rz(4.590949620978165) q[3];
cx q[0],q[3];
u3(1.7070329590723476,-1.5736095138211819,pi/2) q[0];
cx q[1],q[3];
rz(4.5913804867568055) q[3];
cx q[1],q[3];
u3(1.7070329590723479,-1.5826362301302956,pi/2) q[1];
cx q[0],q[1];
rz(-2.2103189369722873) q[1];
cx q[0],q[1];
cx q[2],q[3];
rz(4.5905084015739295) q[3];
cx q[2],q[3];
u3(1.7070329590723476,-1.5986237825556393,pi/2) q[2];
cx q[0],q[2];
rz(-2.210640797855027) q[2];
cx q[0],q[2];
cx q[1],q[2];
rz(-2.210327092921551) q[2];
cx q[1],q[2];
u3(1.7070329590723476,-1.6307513774662419,pi/2) q[3];
cx q[0],q[3];
rz(-2.2100352004525883) q[3];
cx q[0],q[3];
u3(7.486518446724349,-pi/2,pi/2) q[0];
cx q[1],q[3];
rz(-2.2102426147385383) q[3];
cx q[1],q[3];
u3(7.486518446724349,-pi/2,pi/2) q[1];
cx q[2],q[3];
rz(-2.209822802039409) q[3];
cx q[2],q[3];
u3(7.486518446724349,-pi/2,pi/2) q[2];
u3(7.486518446724349,-pi/2,pi/2) q[3];
barrier q[0],q[1],q[2],q[3];
measure q[0] -> meas[0];
measure q[1] -> meas[1];
measure q[2] -> meas[2];
measure q[3] -> meas[3];
barrier q[0],q[1],q[2],q[3];
measure q[0] -> meas0[0];
measure q[1] -> meas0[1];
measure q[2] -> meas0[2];
measure q[3] -> meas0[3];
barrier q[0],q[1],q[2],q[3];
measure q[0] -> reg_measure[0];
measure q[1] -> reg_measure[1];
measure q[2] -> reg_measure[2];
measure q[3] -> reg_measure[3];
